package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"adtec/backend/src/graphql/model"
	"adtec/backend/src/router/channelCollectedAdLinkRouter"
	"context"
)

// CreateChannelCollectedAdLink is the resolver for the createChannelCollectedAdLink field.
func (r *mutationResolver) CreateChannelCollectedAdLink(ctx context.Context, input model.ChannelCollectedAdLinkInput) (*model.ChannelCollectedAdLinks, error) {
	return channelCollectedAdLinkRouter.Create(ctx, input)
}

// DeleteChannelCollectedAdLink is the resolver for the deleteChannelCollectedAdLink field.
func (r *mutationResolver) DeleteChannelCollectedAdLink(ctx context.Context, channelCollectedAdLinkInput *model.ChannelCollectedAdLinkInput) (*model.DeletionResult, error) {
	return channelCollectedAdLinkRouter.Delete(ctx, channelCollectedAdLinkInput)
}

// ChannelCollectedAdLinkByID is the resolver for the channelCollectedAdLinkById field.
func (r *queryResolver) ChannelCollectedAdLinkByID(ctx context.Context, adPaymentID string) (*model.ChannelCollectedAdLinks, error) {
	return channelCollectedAdLinkRouter.Get(ctx, adPaymentID)
}

// ChannelCollectedAdLink is the resolver for the channelCollectedAdLink field.
func (r *queryResolver) ChannelCollectedAdLink(ctx context.Context, channelCollectedAdLinkInput *model.ChannelCollectedAdLinkInput) (*model.ChannelCollectedAdLinks, error) {
	return channelCollectedAdLinkRouter.GetByChannelIdAndAdPaymentId(ctx, channelCollectedAdLinkInput)
}

// GetAllChannelCollectedAdLinks is the resolver for the getAllChannelCollectedAdLinks field.
func (r *queryResolver) GetAllChannelCollectedAdLinks(ctx context.Context, channelCollectedAdLinkFilter *model.ChannelCollectedAdLinkFilter) ([]*model.ChannelCollectedAdLinks, error) {
	return channelCollectedAdLinkRouter.GetAll(ctx, channelCollectedAdLinkFilter)
}
