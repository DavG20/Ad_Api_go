package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.43

import (
	"adtec/backend/src/graphql/model"
	"adtec/backend/src/router/bankRouter"
	"context"
	"fmt"
)

// CreateBank is the resolver for the createBank field.
func (r *mutationResolver) CreateBank(ctx context.Context, input model.CreateBankInput) (*model.Banks, error) {
	return bankRouter.Create(ctx, input)
}

// UpdateBank is the resolver for the updateBank field.
func (r *mutationResolver) UpdateBank(ctx context.Context, input model.UpdateBankInput) (*model.Banks, error) {
	return bankRouter.Update(ctx, input)
}

// DeleteBank is the resolver for the deleteBank field.
func (r *mutationResolver) DeleteBank(ctx context.Context, id string) (*model.DeletionResult, error) {
	panic(fmt.Errorf("not implemented: DeleteBank - deleteBank"))
}

// BankByID is the resolver for the bankById field.
func (r *queryResolver) BankByID(ctx context.Context, id string) (*model.Banks, error) {
	return bankRouter.Get(ctx, id)
}

// GetAllBanks is the resolver for the getAllBanks field.
func (r *queryResolver) GetAllBanks(ctx context.Context, bankFilter model.BankFilter) ([]*model.Banks, error) {
	return bankRouter.GetAll(ctx, bankFilter)
}
